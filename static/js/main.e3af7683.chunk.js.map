{"version":3,"sources":["components/RawBlogPosts.js","containers/BlogContainer.js","components/Menu.js","components/About.js","components/BookClubCard.js","components/CookbookCard.js","components/HabitTrackerCard.js","containers/ProjectsContainer.js","components/Contact.js","containers/HomeContainer.js","components/Post.js","App.js","serviceWorker.js","index.js"],"names":["posts","id","title","body","date","tags","summary","link","BlogContainer","react_default","a","createElement","reactstrap_es","className","style","minHeight","window","innerHeight","map","p","href","concat","Component","Menu","sticky","About","props","Fragment","name","height","backgroundColor","fontSize","color","margin","textAlign","BookClubCard","width","src","frameborder","allow","allowfullscreen","padding","CookbookCard","HabitTrackerCard","ProjectsContainer","sm","xs","components_BookClubCard","components_CookbookCard","components_HabitTrackerCard","Contact","rel","target","class","HomeContainer","components_Contact","components_About","containers_ProjectsContainer","Post","state","currentPost","find","parseInt","_this","match","params","console","log","this","split","graf","React","withRouter","App","react","components_Menu","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3af7683.chunk.js","sourcesContent":["export const posts = [\n  {\n    id: 1,\n    title: \"You can make a Chrome extension!\",\n    body:\n      \"Inspired by this post by Lindsay Grizzard on how to make a simple Chrome extension, I decided to try my own.\\nAccording to the docs over at developer.chrome.com an extension should be a small program with a single, narrow purpose. Extensions are used to customize the browsing experience.\\nI started by following the beginning of Lindsay’s walkthrough to make an extension that renders a custom HTML page each time you open a new tab.\\nI made a directory with an index.html file and a manifest.json file.\\nEvery extension needs to have a manifest. It needs a name, description, version and manifest version. Manifest version should be set to ‘2.’ That’s the supported version right now. The other version is your project version number.\\nchrome_url_overrides is what’s going to let us start customizing. For the basic walkthrough we just told each new tab to load our simple index.html.\\nTo test it, we go to chrome://extensions and use the toggle in the upper right corner to switch to developer mode. Click “load unpacked” and select the extension directory. Now when I open a new tab I see the result of my index.html file.\\nThat’s exciting, but I wanted to try something a little more fun.\\nWith just one more file and a few more lines of code I made my extension trigger an alert on Twitter when you click the retweet button!\\nFirst, I made a very simple index.js file that console.logs 'Hello Twitter' to make sure I'm connected.\\nThen I made an addition to manifest.json.\\nThe content scripts run on certain websites. Matches sets a match pattern. This one will match any URL with twitter.com in it. Then I specify the path to my new index.js file. After the updates were made and saved, I had return to Chrome developer mode and tell the extension to refresh so it would get those changes.\\nThen, when I navigated to Twitter and checked the console to make sure index.js was connected.\\nIt was! Next I spent some time poking around in the console. I practiced using querySelectorAll and getElementsByClassName to figure out how I was going to grab what I wanted to change.\\nI ended up selecting the retweet buttons by class name. Then I turned them into an array so I could map over them and add event listeners that would trigger my alert on click.\\nBack at the Chrome developer mode I refreshed again and headed back to Twitter and started trying to retweet things.\\nIt works. It’s not ready for the Chrome Extension Store, but it’s fun to practice on!\",\n    date: \"October 18, 2018\",\n    tags: [\"JavaScript\", \"Chrome\"],\n    summary:\n      \"I made a simple extension that triggers an alert that asks ifyou're sure when you click a retweet button.\",\n    link:\n      \"https://aubreeabril.wordpress.com/2018/10/18/you-can-make-a-chrome-extension/\"\n  },\n  {\n    id: 2,\n    title: \"Hiding secret credentials in Rails\",\n    body:\n      \"I’ve tried to learn how to keep my API keys secret at some point during every Flatiron project I’ve done so far and failed and gave up. This time my partner and I got it to work and I wanted to save the whole process in one place for the next time I do this.\\nRails 5.2 introduced the credentials file. You’ll find it in config/credentials.yml.env and it will look something like this.\\nYou can hide your API keys and any other credentials that need to remain secret here, but as you can see, it’s encrypted, so you can’t edit it directly. You can run this command in your terminal:\\n$ EDITOR=atom --wait rails credentials:edit\\nYou can replace atom above with the name of your editor. This will open up a readable version of the file that you can edit. The file has a helpful commented out guide you can follow for formatting your secrets, but they should look something like this.\\napi:\\nid: 1234\\nkey: 3456789\\nIt’s easy to draw on these secrets later when you’re ready to use them.\\nYour Rails app will also have a config/master.key file, which you should add to your .gitignore. This master key is used to encrypt and decrypt the credentials.\\nOne wrinkle with this came up when my project partner cloned the project and tried to seed the database using our API keys. Since master.key was in the .gitignore file, she didn’t have that to decrypt the credentials file. So if a collaborator clones your project and needs to use your app’s credentials, they will need to create a master.key file that matches yours.\\nHiding our API credentials this way caused us problems when we later deployed the app on Heroku (How to do that here). Since master.key was in our .gitignore, Heroku couldn’t get to the unencrypted version of our keys.\\nTo fix it we saved our master.key to an environment variable. You can set a Heroku environment variable from the Heroku CLI by running:\\nheroku config:set RAILS_MASTER_KEY=YOUR APP'S MASTER KEY\\nI discovered later that you can also set up environment variables right on the Heroku dashboard for your application. Navigate to your application’s settings page and click the button that says Reveal Config Vars. You can add and edit your config variables here.\\nAnd now you have an app that doesn’t reveal your API secrets!\",\n    date: \"October 4, 2018\",\n    tags: [\"Ruby\"],\n    summary:\n      \"I learned how to use credentials.yml to hide my API keys in Rails\",\n    link:\n      \"https://aubreeabril.wordpress.com/2018/10/04/hiding-secret-credentials-in-rails/\"\n  }\n];\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron } from \"reactstrap\";\nimport { posts } from \"../components/RawBlogPosts\";\n\nclass BlogContainer extends Component {\n  render() {\n    return (\n      <Jumbotron\n        className=\"blog-container\"\n        style={{ minHeight: window.innerHeight }}\n      >\n        {posts.map(p => (\n          <div className=\"blog-item\">\n            <h1 className=\"blog-headline\">\n              <a href={`${p.link}`}>{p.title}</a>\n            </h1>\n            <p>{p.summary}</p>\n          </div>\n        ))}\n      </Jumbotron>\n    );\n  }\n}\n\nexport default BlogContainer;\n\n// <Link to={`/blog/${p.id}`}>{p.title}</Link>\n","import React, { Component } from \"react\";\nimport { Navbar, NavItem, Nav, NavbarBrand, NavLink } from \"reactstrap\";\n// added portfolio to links for gh-pages\nclass Menu extends Component {\n  render() {\n    return (\n      <Navbar sticky=\"top\">\n        <Nav>\n          <NavbarBrand href=\"/portfolio/#aa\">\n            <strong>AA</strong>\n          </NavbarBrand>\n          <NavItem>\n            <strong>\n              <NavLink href=\"/portfolio/#about\">About</NavLink>\n            </strong>\n          </NavItem>\n          <NavItem>\n            <strong>\n              <NavLink href=\"/portfolio/#projects\">Projects</NavLink>\n            </strong>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Menu;\n\n//<NavItem>\n//  <strong>\n//    <NavLink href=\"/portfolio/blog\">Blog</NavLink>\n//  </strong>\n//</NavItem>\n","import React from \"react\";\nimport { Jumbotron, Card, CardText } from \"reactstrap\";\n\nconst About = props => {\n  return (\n    <React.Fragment>\n      <a name=\"about\" />\n      <Jumbotron\n        style={{ height: window.innerHeight, backgroundColor: \"white\" }}\n      >\n        <i\n          className=\"fas fa-code\"\n          style={{\n            fontSize: \"7em\",\n            color: \"#d1bfa7\",\n            margin: \"20px\",\n            textAlign: \"right\"\n          }}\n        />\n\n        <Card className=\"text-left gold-card\">\n          <CardText className=\"gold-card-text\">\n            I'm a full-stack web developer and recovering journalist with\n            experience in{\" \"}\n            <span className=\"emphasized\">\n              <strong>Ruby on Rails</strong>\n            </span>\n            ,{\" \"}\n            <span className=\"emphasized\">\n              <strong>JavaScript</strong>\n            </span>{\" \"}\n            and{\" \"}\n            <span className=\"emphasized\">\n              <strong>React</strong>\n            </span>\n            . In my previous life, I worked on a team that was responsible for\n            emailing developers when things were broken and discovered I wanted\n            to be the one making improvements instead.\n          </CardText>\n        </Card>\n      </Jumbotron>\n    </React.Fragment>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Card, CardTitle, CardText } from \"reactstrap\";\n\nconst BookClubCard = props => {\n  return (\n    <Card className=\"project-card\">\n      <div className=\"card-image\">\n        <iframe\n          title=\"Book Club demo\"\n          width=\"100%\"\n          src=\"https://www.youtube.com/embed/bkCJCK8nF2Y\"\n          frameborder=\"0\"\n          allow=\"autoplay; encrypted-media\"\n          allowfullscreen\n        />\n      </div>\n      <CardTitle style={{ padding: \"10px\" }}>Book Club</CardTitle>\n      <CardText className=\"project-text\">\n        A single page web application for book club management. Built with a\n        Rails API backend and React/Redux frontend, styled with Ant Design.\n      </CardText>\n    </Card>\n  );\n};\n\nexport default BookClubCard;\n","import React from \"react\";\nimport { Card, CardTitle, CardText } from \"reactstrap\";\n\nconst CookbookCard = props => {\n  return (\n    <Card className=\"project-card\">\n      <div className=\"card-image\">\n        <iframe\n          title=\"Cookbook demo\"\n          width=\"100%\"\n          src=\"https://www.youtube.com/embed/gSKpxNr7-_s\"\n          frameborder=\"0\"\n          allow=\"autoplay; encrypted-media\"\n          allowfullscreen\n        />\n      </div>\n      <CardTitle style={{ padding: \"10px\" }}>Flatiron Cookbook</CardTitle>\n      <CardText className=\"project-text\">\n        An application for finding and saving recipes. Built with a Rails API\n        backend and React frontend, styled with Semantic-React.\n      </CardText>\n    </Card>\n  );\n};\n\nexport default CookbookCard;\n","import React from \"react\";\nimport { Card, CardTitle, CardText } from \"reactstrap\";\n\nconst HabitTrackerCard = props => {\n  return (\n    <Card className=\"project-card\">\n      <div className=\"card-image\">\n        <iframe\n          title=\"Habit Tracker demo\"\n          width=\"100%\"\n          src=\"https://www.youtube.com/embed/KeW_IQzL-3I\"\n          frameborder=\"0\"\n          allow=\"autoplay; encrypted-media\"\n          allowfullscreen\n        />\n      </div>\n      <CardTitle style={{ padding: \"10px\" }}>Habit Tracker</CardTitle>\n      <CardText className=\"project-text\">\n        An application for finding and saving recipes. Built with a Rails API\n        backend and vanilla JS frontend, styled using Semantic UI.\n      </CardText>\n    </Card>\n  );\n};\n\nexport default HabitTrackerCard;\n","import React from \"react\";\nimport { Jumbotron, Row, Col } from \"reactstrap\";\nimport BookClubCard from \"../components/BookClubCard\";\nimport CookbookCard from \"../components/CookbookCard\";\nimport HabitTrackerCard from \"../components/HabitTrackerCard\";\n\nconst ProjectsContainer = props => {\n  return (\n    <React.Fragment>\n      <a name=\"projects\" />\n      <Jumbotron\n        style={{ minHeight: window.innerHeight, backgroundColor: \"#bd8c7d\" }}\n      >\n        <h1 className=\"header-right\">Projects</h1>\n        <Row>\n          <Col sm=\"4\" xs=\"12\">\n            <BookClubCard />\n          </Col>\n          <Col sm=\"4\" xs=\"12\">\n            <CookbookCard />\n          </Col>\n          <Col sm=\"4\" xs=\"12\">\n            <HabitTrackerCard />\n          </Col>\n        </Row>\n      </Jumbotron>\n    </React.Fragment>\n  );\n};\n\nexport default ProjectsContainer;\n","import React from \"react\";\n\nconst Contact = props => {\n  return (\n    <div className=\"contact-text\">\n      <a\n        href=\"https://twitter.com/aubreeabril\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <i class=\"fab fa-twitter\" />\n      </a>\n      <a\n        href=\"https://github.com/aubreeabril\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <i class=\"fab fa-github\" />\n      </a>\n      <a\n        href=\"mailto:aubree.abril@gmail.com\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <i class=\"fas fa-envelope\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { Jumbotron } from \"reactstrap\";\nimport Menu from \"../components/Menu\";\nimport About from \"../components/About\";\nimport ProjectsContainer from \"./ProjectsContainer\";\nimport Contact from \"../components/Contact\";\n\nclass HomeContainer extends Component {\n  render() {\n    return (\n      <div>\n        <a name=\"aa\" />\n        <Jumbotron\n          style={{\n            height: window.innerHeight,\n            backgroundColor: \"#8e8e90\"\n          }}\n        >\n          <h1 className=\"bigName\">Aubree Abril</h1>\n          <h1 className=\"subhead\">Web Developer</h1>\n          <Contact />\n        </Jumbotron>\n        <About />\n        <ProjectsContainer />\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { posts } from \"./RawBlogPosts\";\n\nclass Post extends React.Component {\n  state = {\n    currentPost: posts.find(\n      p => parseInt(this.props.match.params.id, 10) === p.id\n    )\n  };\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    console.log(posts);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.currentPost ? (\n          <React.Fragment>\n            <h1>{this.state.currentPost.title}</h1>\n            <p>{this.state.currentPost.date}</p>\n            {this.state.currentPost.body.split(`\\n`).map(graf => (\n              <p>{graf}</p>\n            ))}\n          </React.Fragment>\n        ) : (\n          \"Loading ...\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Post);\n","import React, { Component, Fragment } from \"react\";\nimport BlogContainer from \"./containers/BlogContainer\";\nimport HomeContainer from \"./containers/HomeContainer\";\nimport Menu from \"./components/Menu\";\nimport Post from \"./components/Post\";\nimport { Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Menu />\n        <Route exact path=\"/portfolio/\" component={HomeContainer} />\n        <Route path=\"/portfolio/blog\" component={BlogContainer} />\n        <Route path=\"/portfolio/blog/:id\" component={Post} />\n        <footer>\n          Made with <i className=\"far fa-heart\" /> by Aubree Abril\n        </footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}